&makegen_include("../common-Makegen");

$D2CFLAGS         # added by update-libdirs
    = $d2c_runtime
    . ' -L../base-file-system'
    . ' -L../collection-extensions'
    . ' -L../common-dylan'
    . ' -L../date'
    . ' -L../file-system'
    . ' -L../format'
    . ' -L../format-out'
    . ' -L../io'
    . ' -L../print'
    . ' -L../regular-expressions'
    . ' -L../standard-io'
    . ' -L../streams'
    . ' -L../string-ext'
    . ' -L../table-ext'
    . ' -L../threads'
    . ' -L../time'
    . ' -L../../d2c/runtime/random';

$CPPFLAGS = $CPPFLAGS . ' -I$(SRCDIR) -I$(top_builddir)';

if ($features{'compiled_for_unix'}) {
    $plat = "unix";
} elsif ($features{'compiled_for_win32'}) {
    $plat = "win32";
} else {
    &unknown_platform_error();
}

&emit_melange_rule("$plat-ffi", "$plat-portability.h");

&emit_c_file_rule("$plat-portability");

&emit_library_rule("$plat-system", '$(BUILDROOT)/force.timestamp', '',
                   'compile', 'no-mindy', 'install');

open(CONSTANTS,">architecture.dylan")
    || die "cannot create architecture.dylan";
print CONSTANTS <<"EOF";
module:      system-internals

define constant \$architecture-little-endian? = $architecture_little_endian;
define constant \$machine-name = #"$machine_name";
EOF
close(CONSTANTS);
